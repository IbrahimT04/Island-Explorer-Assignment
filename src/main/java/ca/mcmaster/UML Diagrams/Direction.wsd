@startuml Direction

package "ca.mcmaster.se2aa4.island.team209" {
    abstract class Drone {
        - coords: Point
        - battery: int
        - myDir: Direction
        
        + Drone(x: int, y: int, Battery: int, dir: Direction)
        + getCoordinates(): Point
        + getBattery(): int
        + getDirection(): Direction
    }

    class ExploringDrone {
        - lastScan: Direction
        
        + ExploringDrone(x: int, y: int, Battery: int, dir: Direction)
        + turnRight()
        + turnLeft()
        + goForward()
        + getLastScan(): Direction
        + setLastScan(d: Direction)
        + staticPoint(): Point
    }

    enum Direction {
        N
        E
        S
        W

        + toString(): String
        + right(): Direction
        + left(): Direction
    }

    class Point {
        - x: int
        - y: int
        
        + Point(x: int, y: int)
        + equals(ob: Object): boolean
    }
    
    Drone <|-- ExploringDrone
    ExploringDrone --> Direction : Uses
    Drone --> Point : Uses
    ExploringDrone --> Point : Uses
}

@enduml